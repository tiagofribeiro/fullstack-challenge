services:
  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_DB: 'challenge'
      POSTGRES_USER: 'basic_user'
      POSTGRES_PASSWORD: 'basic_password'
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fullstack-challenge_default

  pgadmin:
    image: dpage/pgadmin4
    container_name: postgres_pgAdmin
    environment:
      PGADMIN_DEFAULT_EMAIL: 'teste@teste.com'
      PGADMIN_DEFAULT_PASSWORD: 'teste'
    ports:
      - 16543:80
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    networks:
      - fullstack-challenge_default

  setup:
    image: postgres:16
    depends_on:
      - db
    volumes:
      - ./setup.sh:/setup.sh
    entrypoint: ["/bin/bash", "/setup.sh"]
    environment:
      POSTGRES_DB: 'challenge'
      POSTGRES_USER: 'basic_user'
      POSTGRES_PASSWORD: 'basic_password'
    networks:
      - fullstack-challenge_default

  backend:
    build: ./service
    container_name: service_sensors
    depends_on:
      - db
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgres://basic_user:basic_password@db:5432/challenge

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: report_sensors
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  postgres_data:

networks:
  fullstack-challenge_default:
    driver: bridge
